#!/bin/bash

set -eo pipefail

USB_MIC_SOURCE=alsa_input.usb-0c76_USB_PnP_Audio_Device-00.mono-fallback
LAPTOP_AUDIO_SOURCE=alsa_input.pci-0000_00_1f.3.analog-stereo

MONITOR_SINK=alsa_output.pci-0000_01_00.1.hdmi-stereo
HEADPHONES_SINK=bluez_sink.CC_98_8B_F4_C0_CC.a2dp_sink
LAPTOP_AUDIO_SINK=alsa_output.pci-0000_00_1f.3.analog-stereo

SOURCES="usb-mic:$USB_MIC_SOURCE laptop-mic:$LAPTOP_AUDIO_SOURCE"
SINKS="headphones:$HEADPHONES_SINK monitor:$MONITOR_SINK laptop-speakers:$LAPTOP_AUDIO_SINK"

sink_available() {
  local sink

  sink="$1"

  pactl list short sinks | grep -q "$sink"
}

source_available() {
  local source

  source="$1"

  pactl list short sources | grep -q "$source"
}

set_sink() {
  for sink in $SINKS; do
    human_name="$(echo "$sink" | awk -F: '{print $1}')"
    pa_name="$(echo "$sink" | awk -F: '{print $2}')"

    if sink_available "$pa_name"; then
      pactl set-default-sink "$pa_name"
      echo "Set sink to $human_name" >&2
      return
    fi
  done

  echo "Could not find any available sinks" >&2
}

set_source() {
  for source in $SOURCES; do
    human_name="$(echo "$source" | awk -F: '{print $1}')"
    pa_name="$(echo "$source" | awk -F: '{print $2}')"

    if source_available "$pa_name"; then
      pactl set-default-source "$pa_name"
      echo "Set source to $human_name" >&2
      return
    fi
  done

  echo "Could not find any available sources" >&2
}

main() {
  set_source
  set_sink
}

main "$@"
